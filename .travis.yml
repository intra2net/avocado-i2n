language: python
python:
    - 3.4
    - 3.5
    - 3.6
    - pypy3
env:
    - INSTALL_VARIANT=pip
matrix:
  include:
    # TODO: add RPM and DEB docker building and testing
    #- python: 3.6
    #  env: INSTALL_VARIANT=rpm
    #- python: 3.6
    #  env: INSTALL_VARIANT=deb
  allow_failures:
    - python: pypy3

services:
  - docker
# docker images are not cached by travis due to vm recreation for each build
cache:
  - pip

branches:
  except:
    - tp-i2n

sudo: true

# install any dependencies and build package
install:
  # Clone-install Avocado
  - pip install Sphinx==1.3b1
  - pip install -r requirements_pip.txt
  # TODO: after integrating more of our patches we can use the origin repo
  #- git clone --depth 1 https://github.com/avocado-framework/avocado.git avocado-libs
  - git clone --depth 1 https://github.com/intra2net/aexpect.git aexpect-libs
  - cd aexpect-libs
  - pip install -e .
  - cd ..
  # TODO: after integrating more of our patches we can use the origin repo
  #- git clone --depth 1 https://github.com/avocado-framework/avocado.git avocado-libs
  - git clone --depth 1 https://github.com/intra2net/avocado.git avocado-libs
  - cd avocado-libs
  - pip install -e .
  - cd ..
  # Clone-install Avocado-vt
  # TODO: after integrating more of our patches we can use the origin repo
  #- git clone --depth 1 https://github.com/avocado-framework/avocado-vt.git avocado-vt-libs
  - git clone --depth 1 https://github.com/intra2net/avocado-vt.git avocado-vt-libs
  - cd avocado-vt-libs
  - pip install -e .
  - cd ..
  # Create some fake binaries to make vt-bootstrap happy
  # TODO: decide whether to perform vt-bootstrap which consumes time and is less stable and secure atm
  #- mkdir -p /tmp/dummy_bin
  #- touch /tmp/dummy_bin/arping
  #- touch /tmp/dummy_bin/tcpdump
  #- chmod 777 /tmp/dummy_bin/*
  #- export PATH="/tmp/dummy_bin:$PATH"
  # Setup Avocado-vt for functional tests
  #- AVOCADO_LOG_DEBUG=yes avocado vt-bootstrap --vt-skip-verify-download-assets --yes-to-all
  - pip install -e .
  # TODO: local (editable) pip installation does not take care of the config files of both av-vt and av-i2n
  - cp etc/avocado/conf.d/i2n.conf avocado-libs/avocado/etc/avocado/conf.d/i2n.conf
  # TODO: install the sample test provider in a location that does not require sudo
  - sudo bash install_tp.sh

before_script:
  - sleep 3  # give some time to start
  - if [[ $TRAVIS_PYTHON_VERSION != '3.4' ]]; then export EXTRA_PYTHON_VERSION=1; fi

# run tests
script:
  - make check
  # Cleanup avocado(-vt) libs
  - rm -rf avocado-vt-libs
  - rm -rf avocado-libs

# use this to disable email notifications (e.g. while testing configuration)
#notifications:
#email: false
