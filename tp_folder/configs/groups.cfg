# groups.cfg - main configuration for all test variants

# Include the base config files.
include groups-base.cfg

variants:

# Used original subtests

    - original:
        variants:

            - install:
                get_state = 0root
                set_state = install
                get_type = offline
                set_type = offline
                skip_image_processing = no
                type = steps
                start_vm = yes
                kill_vm = yes
                kill_vm_gracefully = yes
                kill_vm_on_error = yes
                shutdown_cleanly = yes
                shutdown_cleanly_timeout = 120
                force_create_image = yes
                fail_if_stuck_for = 300
                stuck_detection_history = 2
                keep_screendump_history = yes
                encode_video_files = no
                kill_timeout = 60
                #kill_vm_timeout = 0
                #kill_vm_timeout_on_error = 0

            - unattended_install:
                get_state = 0root
                set_state = install
                get_type = offline
                set_type = offline
                skip_image_processing = no
                virt_test_type = qemu libvirt
                type = unattended_install
                start_vm = no
                kill_vm = yes
                kill_vm_gracefully = yes
                kill_vm_on_error = yes
                shutdown_cleanly = yes
                shutdown_cleanly_timeout = 120
                keep_screendump_history = yes
                encode_video_files = no
                force_create_image = yes
                guest_port_unattended_install = 12323
                kernel = vmlinuz
                initrd = initrd.img
                # NOTE: Because the vms are parsed then postprocessed in a customized way,
                # the parameters in a conditional block of a given variant which have defaults
                # outside of the conditional blow will be overwritten by their defaults.
                # A clean solution to this is to accept that the Cartesian parser does not
                # work in a symmetric way and to define conditional blocks only for variants
                # which are already defined, e.g. 'Windows' is already defined at this stage.
                Windows:
                    kernel =
                    initrd =
                # Throw errors if guest screen is inactive
                inactivity_watcher = error
                # Inactivity treshold to error the test
                inactivity_treshold = 1800
                # Set migrate_background to yes to run migration in parallel
                # migrate_background = yes
                image_verify_bootable(_.*)? ?= no
                # Backup images from nfs when install failed
                image_copy_on_error = no
                # This value is setup for huge page set up.
                # Lowest memory size for on vm to finish install test based on the
                # anaconda memory check size. Tested it with RHEL, Windows and newest
                # Fedora guests. For other guests like ubuntu if your install failed with
                # don't have enough RAM error from anaconda, please enlarge this value.
                lowest_mem = 512
                variants:
                    - aio_threads:
                        image_aio = threads
                # Add some special types of installation
                variants:
                    - default_install:
                        # Installation without any special configuration
                # Way of delivering ks file into the guest
                variants:
                    # Additional iso with kickstart is attached into the guest
                    - extra_cdrom_ks:
                        only Linux
                        unattended_delivery_method = cdrom
                        cdroms(_.*)? ?+= " unattended"
                        drive_index_unattended = 1
                        drive_index_cd1(_.*)? ?= 2
                    # Kickstart is packed into the installation iso
                    - in_cdrom_ks:
                        only Linux, unattended_install.cdrom
                        unattended_delivery_method = integrated
                    # Autotest starts simple http server providing kickstart
                    - http_ks:
                        only Linux
                        unattended_delivery_method = url
                    # Image with kickstart is attached into the guest as floppy drive
                    - floppy_ks:
                        only Linux
                        unattended_delivery_method = floppy

                variants:
                    # Install guest from cdrom
                    - cdrom:
                        # TODO: is this needed for both kvm and libvirt?
                        # This option is only used in windows installation case,
                        # since linux use kernel/initrd option of qemu.
                        boot_once(_.*)? ?= d
                        medium = cdrom
                        redirs(_.*)? ?+= " unattended_install"
                    # Install guest from http/ftp url
                    - url:
                        only Linux
                        medium = url
                        url = REPLACE_THIS_WITH_TREE_URL
                    # Install guest from nfs nfs_server:nfs_dir
                    - nfs:
                        only Linux
                        medium = nfs
                        nfs_server = REPLACE_THIS_WITH_NFS_SERVER
                        nfs_dir = REPLACE_THIS_WITH_NFS_DIRECTORY
                    # Install guest with a remote kickstart
                    - remote_ks:
                        only Linux
                        medium = url
                        # TODO: does kvm need to prefix this with '--append'?
                        extra_params = " ks=REPLACE_THIS_WITH_URL_OF_KS"
                        url = REPLACE_THIS_WITH_TREE_URL
                    # Install guest using pxe/tftp  (virt-install --pxe)
                    - pxe:
                        only Linux
                        medium = pxe
                    # Install guest using kernel/initrd pair from directory
                    - kernel_initrd:
                        only Linux
                        medium = kernel_initrd
                    - import:
                        virt_test_type = libvirt
                        no extra_cdrom_ks, in_cdrom_ks, http_ks, floppy_ks
                        medium = import
                        force_create_image = no
                        create_image = no

# Custom setup subtests

    # internal subtests are similar to the original subtests in three features:
    # - they should have no "vms" parameter specification (= implementable on multiple vms, e.g. vm1, vm2 or vm3)
    # - they should be executed on just one vm of a required type (e.g. vm1, vm2 xor vm3 rather than "or")
    # - they cannot be called from the command line (= executed as automated setup or predefined manual steps only)
    - internal:
        variants:
            # the setup of these tests cannot be reused
            - stateless:
                start_vm = no
                kill_vm = no
                variants:
                    - 0scan:
                        type = shared_scan_dependencies
                    - 0root:
                        # this is the object root or dependency termination point
                        # the ultimate dependency for each vm is it's own existence
                    - 0preinstall:
                        type = shared_configure_install
                        host_set_bridge = no
                    - manage:
                        type = shared_manage_vms
                        variants:
                            - unchanged:
                                # vm_action can be overridden to any of
                                # get, set, unset, push, pop
                                vm_action = check
                            - run:
                                vm_action = run
                            - download:
                                vm_action = download
                            - upload:
                                vm_action = upload
                            - start:
                                vm_action = boot
                                start_vm = yes
                            - stop:
                                vm_action = shutdown
                                kill_vm = yes
                                kill_timeout = 60
                                shutdown_method = shell
            # the setup of these tests can be reused as long as it runs out of memory
            - permanent:
                kill_vm = yes
                kill_vm_gracefully = yes
                kill_timeout = 60
                get_type = offline
                set_type = offline
                variants:
                    - customize_vm:
                        get_state = install
                        set_state = customize_vm
                        type = shared_customize_vm
                        guest_avocado_enabled = no
                        Linux:
                            additional_deployment_dir = linux/packages
                            guest_avocado_enabled = yes
                            tmp_dir = /tmp
                        Windows:
                            additional_deployment_dir = windows/packages
                            tmp_dir = C:\
                            host_dhcp_service = yes
                            WinXP:
                                windows_vo_version = winxp
                            WinVista:
                                windows_vo_version = winvista
                            Win7:
                                windows_vo_version = win7
                            Win8:
                                windows_vo_version = win8
                            Win10:
                                windows_vo_version = win10
                    - set_provider:
                        get_state = customize_vm
                        set_state = set_provider
                        type = shared_set_provider
                        host_dhcp_service = yes
                    - system_update:
                        get_state = install
                        set_state = system_update
                        type = shared_system_update
                        host_dhcp_service = yes
                    - linux_virtuser:
                        get_state = customize_vm
                        set_state = linux_virtuser
                        type = shared_linux_virtuser
                        linux_vo_version = centos7
                    - windows_virtuser:
                        get_state = customize_vm
                        set_state = windows_virtuser
                        type = shared_windows_virtuser
                        WinXP:
                            windows_vo_version = winxp
                        WinVista:
                            windows_vo_version = winvista
                        Win7:
                            windows_vo_version = win7
                        Win8:
                            windows_vo_version = win8
                        Win10:
                            windows_vo_version = win10
            # the setup of these tests can be reused as long as the respective vm is reverted to it (and not to something else)
            - ephemeral:
                start_vm = yes
                kill_vm = no
                get_state = customize_vm
                get_type = offline
                set_type = online
                type = shared_manage_vms
                vm_action = boot
                variants:
                    - boot:
                        set_state = boot
                    - online_deploy:
                        set_state = online_deploy
                        type = shared_online_deploy
                    - online_with_provider:
                        get_state = set_provider
                        set_state = online_with_provider
                        type = shared_online_with_provider
                        host_dhcp_service = yes
            - manual:
                variants:
                    - windows_online:
                        # no set_type or other params are necessary since
                        # we don't use this variant - it is defined only
                        # for state navigation purposes
                        get_state = 0root
                        get_type = offline
                        set_state = windows_online
                    - develop:
                        variants:
                            # NOTE: use this to create new GUI tests more efficiently
                            - generator:
                                get_state =
                                type = shared_multigui_generator
                            # NOTE: use this to run stress or large size tests
                            - testbed:
                                take_regular_screendumps = yes
                                screendump_delay = 0.3
                                keep_screendumps = yes
                                get_state = vu_alt
                                type = shared_multigui_testbed


# Custom product subtests

    - quicktest: install setup image_copy unattended_install.cdrom
        vms = vm1
        get_state = online_deploy
        variants:
            - tutorial1:
                type = tutorial_step_1
                file_contents = "avocado tutorial 1"
            - tutorial2:
                type = tutorial_step_2
                test_prefix = /etc
                variants:
                    - files:
                        kind = files
                        must_exist = fstab
                        must_not_exist = foo shunned/file
                    - names:
                        kind = names
                        script = check_names
                        md5sum = 0d97b22dcc86a56a33d1530793c19a5d

    - tutorial3:
        get_state_vm1 = online_with_provider
        get_state_vm2 = online_deploy
        type = tutorial_step_3
        vms = vm1 vm2
        roles = client server
        client = vm2
        server = vm1
        host_dhcp_service = yes
