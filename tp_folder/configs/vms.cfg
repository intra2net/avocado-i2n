# objects.cfg - test objects represented by virtual machines

include guest.cfg

# the set of vms now depends on the variant
nets = net1
vms =
main_vm =

# VM network configuration
nics = b0 b1 b2
nic_roles = host_nic internet_nic lan_nic
host_nic = b0
internet_nic = b1
lan_nic = b2

# Bridge interfaces for each nic
netdst_b0 = b0
netdst_b1 = b1
netdst_b2 = b2

# Reset any impermanent interfaces between tests to perform cleanup
permanent_netdst = no

netmask = 255.255.0.0
netmask_b0 = 255.255.255.0
netmask_b1 = 255.255.0.0
netmask_b2 = 255.255.0.0

variants:
    - vm1:
        vms = "vm1"
        main_vm = vm1
        # bridges
        netdst_b0 = vm1b0
        netdst_b1 = vm1b1
        netdst_b2 = vm1b2
        # ip addresses
        nics = b0 b1 b2
        ip_b0 = 192.168.1.1
        ip_provider_b0 = 192.168.1.254
        host_b0 = 192.168.1.254
        ip_b1 = 10.1.0.1
        ip_provider_b1 = 10.1.0.254
        host_b1 = 10.1.0.254
        ip_b2 = 172.17.0.1
        ip_provider_b2 = 172.17.0.1
        mac_b0 = 02:00:00:00:01:01
        mac_b1 = 02:00:00:00:01:02
        mac_b2 = 02:00:00:00:01:03
        # storage
        states_images_vm1 = qcow2ext
        states_vms_vm1 = ramfile
        images_base_dir += vm1/
        vg_name(_.*)? ?<= ${hostname}_vm1_
        disk_sparse_filename(_.*)? ?<= ${hostname}_vm1_
        # software and hardware restrictions
        only qemu_kvm_centos, qemu_kvm_fedora
        suffix _vm1
    - vm2:
        vms = "vm2"
        main_vm = vm2
        # bridges
        netdst_b0 = vm2b0
        netdst_b1 = vm2b1
        # ip addresses
        nics = b0 b1
        ip_b0 = 192.168.2.1
        ip_provider_b0 = 192.168.2.254
        host_b0 = 192.168.2.254
        ip_b1 = 10.2.0.1
        ip_provider_b1 = 10.2.0.254
        host_b1 = 10.2.0.254
        mac_b0 = 02:00:00:00:02:01
        mac_b1 = 02:00:00:00:02:02
        # storage
        states_images_vm2 = qcow2ext
        states_vms_vm2 = ramfile
        images_base_dir += vm2/
        vg_name(_.*)? ?<= ${hostname}_vm2_
        disk_sparse_filename(_.*)? ?<= ${hostname}_vm2_
        # software and hardware restrictions
        only qemu_kvm_windows_10, qemu_kvm_windows_7
        suffix _vm2
    - vm3:
        vms = "vm3"
        main_vm = vm3
        # bridges
        netdst_b0 = vm3b0
        netdst_b1 = vm3b1
        netdst_b2 = vm3b2
        # ip addresses
        nics = b0 b1 b2
        ip_b0 = 192.168.3.1
        ip_provider_b0 = 192.168.3.254
        host_b0 = 192.168.3.254
        ip_b1 = 10.3.0.1
        ip_provider_b1 = 10.3.0.254
        host_b1 = 10.3.0.254
        ip_b2 = 172.19.0.1
        ip_provider_b2 = 172.19.0.1
        mac_b0 = 02:00:00:00:03:01
        mac_b1 = 02:00:00:00:03:02
        mac_b2 = 02:00:00:00:03:03
        # storage
        states_images_vm3 = qcow2
        states_vms_vm3 = qcow2vt
        permanent_vm = yes
        images_base_dir += vm3/
        # software and hardware restrictions
        only qemu_kvm_ubuntu, qemu_kvm_kali
        suffix _vm3

variants:
    - @vms:
