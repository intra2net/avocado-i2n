# objects.cfg - test objects represented by virtual machines

include guest.cfg

# the set of vms now depends on the variant
vms =

# VM network configuration
nics = b0 b1 b2

# Bridge interfaces for each nic
netdst_b0 = b0
netdst_b1 = b1
netdst_b2 = b2

# Reset any impermanent interfaces between tests to perform cleanup
permanent_netdst = no

netmask = 255.255.0.0
netmask_b0 = 255.255.255.0
netmask_b1 = 255.255.0.0
netmask_b2 = 255.255.0.0

variants:
    - vm1:
        vms = "vm1"
        # bridges
        netdst_b0 = ${hostname}vm1b0
        netdst_b1 = ${hostname}vm1b1
        netdst_b2 = ${hostname}vm1b2
        # ip addresses
        # mac addresses follow different order
        mac_lnic = 02:00:00:00:20:01
        mac_inic = 02:00:00:00:20:02
        mac_onic = 02:00:00:00:20:03
        nics = b0 b1 b2
        ip_b0 = 192.168.1.1
        ip_provider_b0 = 192.168.1.254
        host_b0 = 192.168.1.254
        ip_b1 = 10.1.0.1
        ip_provider_b1 = 10.1.0.254
        host_b1 = 10.1.0.254
        ip_b2 = 172.17.0.1
        ip_provider_b2 = 172.17.0.1
        # storage
        image_name <= ${hostname}_vm1/
        vg_name = ${hostname}_vm1_ramdisk
        ramdisk_sparse_filename = ${hostname}_vm1_virtual_hdd
        # software and hardware restrictions
        only qemu_kvm_centos
        suffix _vm1
    - vm2:
        vms = "vm2"
        # bridges
        netdst_b0 = ${hostname}vm2b0
        netdst_b1 = ${hostname}vm2b1
        netdst_b2 = ${hostname}vm2b2
        # ip addresses
        # mac addresses follow different order
        mac_lnic = 02:00:00:00:20:04
        mac_inic = 02:00:00:00:20:05
        mac_onic = 02:00:00:00:20:06
        ip_b0 = 192.168.2.1
        ip_provider_b0 = 192.168.2.254
        host_b0 = 192.168.2.254
        ip_b1 = 10.2.0.1
        ip_provider_b1 = 10.2.0.254
        host_b1 = 10.2.0.254
        ip_b2 = 172.18.0.1
        ip_provider_b2 = 172.18.0.1
        # storage
        image_name <= ${hostname}_vm2/
        vg_name = ${hostname}_vm2_ramdisk
        ramdisk_sparse_filename = ${hostname}_vm2_virtual_hdd
        # software and hardware restrictions
        only qemu_kvm_windows_10
        suffix _vm2
